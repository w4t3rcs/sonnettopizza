services:
  zipkin:
    container_name: sonnetto-zipkin
    image: openzipkin/zipkin:2.27.1
    environment:
      - STORAGE_TYPE=mem
    ports:
      - '9411:9411'
    networks:
      - sonnetto
  eureka-server:
    container_name: sonnetto-eureka-server
    image: w4t3rcs/sonnetto-eureka-server:latest
    pull_policy: always
    ports:
      - '8761:8761'
    depends_on:
      - zipkin
    networks:
      - sonnetto
  config-server:
    container_name: sonnetto-config-server
    image: w4t3rcs/sonnetto-config-server:latest
    pull_policy: always
    ports:
      - '8888:8888'
    depends_on:
      - eureka-server
      - zipkin
    networks:
      - sonnetto
  broker:
    image: apache/kafka:3.8.0
    container_name: sonnetto-kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    ports:
      - '9092:9092'
    networks:
      - sonnetto
  user-service-mysql:
    container_name: sonnetto-user-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_USER_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - user-service-db:/var/lib/mysql
    networks:
      - sonnetto
  user-service-redis:
    container_name: sonnetto-user-service-redis
    image: redis:7.2.5
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - user-service-cache:/data
    networks:
      - sonnetto
  user-service:
    container_name: sonnetto-user-service
    image: w4t3rcs/sonnetto-user-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_USER_SERVICE_URL}/${MYSQL_USER_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8081:8081'
    depends_on:
      - zipkin
      - eureka-server
      - config-server
      - broker
      - user-service-mysql
      - user-service-redis
    networks:
      - sonnetto
  ingredient-service-mysql:
    container_name: sonnetto-ingredient-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_INGREDIENT_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ingredient-service-db:/var/lib/mysql
    networks:
      - sonnetto
  ingredient-service-redis:
    container_name: sonnetto-ingredient-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ingredient-service-cache:/data
    networks:
      - sonnetto
  ingredient-service:
    container_name: sonnetto-ingredient-service
    image: w4t3rcs/sonnetto-ingredient-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_INGREDIENT_SERVICE_URL}/${MYSQL_INGREDIENT_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8082:8082'
    depends_on:
      - zipkin
      - eureka-server
      - config-server
      - ingredient-service-mysql
      - ingredient-service-redis
    networks:
      - sonnetto
  product-service-mysql:
    container_name: sonnetto-product-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_PRODUCT_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - product-service-db:/var/lib/mysql
    networks:
      - sonnetto
  product-service-redis:
    container_name: sonnetto-product-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - product-service-cache:/data
    networks:
      - sonnetto
  product-service:
    container_name: sonnetto-product-service
    image: w4t3rcs/sonnetto-product-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_PRODUCT_SERVICE_URL}/${MYSQL_PRODUCT_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8083:8083'
    depends_on:
      - zipkin
      - eureka-server
      - config-server
      - product-service-mysql
      - product-service-redis
    networks:
      - sonnetto
  order-service-mysql:
    container_name: sonnetto-order-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_ORDER_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - order-service-db:/var/lib/mysql
    networks:
      - sonnetto
  order-service-redis:
    container_name: sonnetto-order-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - order-service-cache:/data
    networks:
      - sonnetto
  order-service:
    container_name: sonnetto-order-service
    image: w4t3rcs/sonnetto-order-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_ORDER_SERVICE_URL}/${MYSQL_ORDER_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8084:8084'
    depends_on:
      - zipkin
      - eureka-server
      - config-server
      - broker
      - order-service-mysql
      - order-service-redis
    networks:
      - sonnetto
  notification-service-mysql:
    container_name: sonnetto-notification-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_NOTIFICATION_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - notification-service-db:/var/lib/mysql
    networks:
      - sonnetto
  notification-service-redis:
    container_name: sonnetto-notification-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - notification-service-cache:/data
    networks:
      - sonnetto
  notification-service:
    container_name: sonnetto-notification-service
    image: w4t3rcs/sonnetto-notification-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_NOTIFICATION_SERVICE_URL}/${MYSQL_NOTIFICATION_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8085:8085'
    depends_on:
      - zipkin
      - eureka-server
      - config-server
      - broker
      - notification-service-mysql
      - notification-service-redis
    networks:
      - sonnetto
  keycloak-mysql:
    container_name: sonnetto-keycloak-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_KEYCLOAK_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - keycloak_db:/var/lib/mysql
    networks:
      - sonnetto
  keycloak:
    container_name: sonnetto-keycloak
    image: quay.io/keycloak/keycloak:20.0.2
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8282
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_DB: mysql
      KC_DB_PASSWORD: ${MYSQL_PASSWORD}
      KC_DB_USERNAME: ${MYSQL_USER}
      KC_DB_URL: ${MYSQL_KEYCLOAK_URL}/${MYSQL_KEYCLOAK_DB}

      KC_FEATURES: preview
      KEYCLOAK_ADMIN: ${KEYCLOAK_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - '8282:8080'
    command: start-dev --import-realm
    depends_on:
      - keycloak-mysql
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    networks:
      - sonnetto
  api-gateway:
    container_name: sonnetto-api-gateway
    image: w4t3rcs/sonnetto-api-gateway:latest
    pull_policy: always
    ports:
      - '8080:8080'
    depends_on:
      - zipkin
      - eureka-server
      - config-server
      - user-service
      - ingredient-service
      - product-service
      - order-service
      - notification-service
#      - keycloak-mysql
#      - keycloak
    networks:
      - sonnetto
  prometheus:
    container_name: sonnetto-prometheus
    image: prom/prometheus:v2.54.0
    ports:
      - '9090:9090'
    depends_on:
      - eureka-server
      - config-server
      - user-service
      - ingredient-service
      - product-service
      - order-service
      - notification-service
      - api-gateway
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - sonnetto
  grafana:
    container_name: sonnetto-grafana
    image: grafana/grafana:9.1.7
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    ports:
      - '3000:300'
    depends_on:
      - prometheus
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - sonnetto
volumes:
  user-service-db:
  user-service-cache:
  ingredient-service-db:
  ingredient-service-cache:
  product-service-db:
  product-service-cache:
  order-service-db:
  order-service-cache:
  notification-service-db:
  notification-service-cache:
  keycloak_db:

networks:
  sonnetto:
    driver: bridge