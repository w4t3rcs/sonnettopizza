services:
  eureka-server:
    container_name: sonnetto-eureka-server
    image: w4t3rcs/sonnetto-eureka-server:latest
    pull_policy: always
    ports:
      - '8761:8761'
    networks:
      - sonnetto
  config-server:
    container_name: sonnetto-config-server
    image: w4t3rcs/sonnetto-config-server:latest
    pull_policy: always
    ports:
      - '8888:8888'
    depends_on:
      - eureka-server
    networks:
      - sonnetto
  kafka:
    image: apache/kafka:3.8.0
    container_name: sonnetto-kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - 9092:9092
    depends_on:
      - eureka-server
    networks:
      - sonnetto
  user-service-mysql:
    container_name: sonnetto-user-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_USER_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - user-service-db:/var/lib/mysql
    networks:
      - sonnetto
  user-service-redis:
    container_name: sonnetto-user-service-redis
    image: redis:7.2.5
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - user-service-cache:/data
    networks:
      - sonnetto
  user-service:
    container_name: sonnetto-user-service
    image: w4t3rcs/sonnetto-user-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_USER_SERVICE_URL}/${MYSQL_USER_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8081:8081'
    depends_on:
      - eureka-server
      - config-server
      - kafka
      - user-service-mysql
      - user-service-redis
    networks:
      - sonnetto
  ingredient-service-mysql:
    container_name: sonnetto-ingredient-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_INGREDIENT_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ingredient-service-db:/var/lib/mysql
    networks:
      - sonnetto
  ingredient-service-redis:
    container_name: sonnetto-ingredient-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ingredient-service-cache:/data
    networks:
      - sonnetto
  ingredient-service:
    container_name: sonnetto-ingredient-service
    image: w4t3rcs/sonnetto-ingredient-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_INGREDIENT_SERVICE_URL}/${MYSQL_INGREDIENT_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8082:8082'
    depends_on:
      - eureka-server
      - config-server
      - ingredient-service-mysql
      - ingredient-service-redis
    networks:
      - sonnetto
  dish-service-mysql:
    container_name: sonnetto-dish-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_DISH_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dish-service-db:/var/lib/mysql
    networks:
      - sonnetto
  dish-service-redis:
    container_name: sonnetto-dish-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - dish-service-cache:/data
    networks:
      - sonnetto
  dish-service:
    container_name: sonnetto-dish-service
    image: w4t3rcs/sonnetto-dish-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_DISH_SERVICE_URL}/${MYSQL_DISH_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8083:8083'
    depends_on:
      - eureka-server
      - config-server
      - dish-service-mysql
      - dish-service-redis
    networks:
      - sonnetto
  price-service-mysql:
    container_name: sonnetto-price-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_PRICE_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - price-service-db:/var/lib/mysql
    networks:
      - sonnetto
  price-service-redis:
    container_name: sonnetto-price-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - price-service-cache:/data
    networks:
      - sonnetto
  price-service:
    container_name: sonnetto-price-service
    image: w4t3rcs/sonnetto-price-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_PRICE_SERVICE_URL}/${MYSQL_PRICE_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8084:8084'
    depends_on:
      - eureka-server
      - config-server
      - price-service-mysql
      - price-service-redis
    networks:
      - sonnetto
  order-service-mysql:
    container_name: sonnetto-order-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_ORDER_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - order-service-db:/var/lib/mysql
    networks:
      - sonnetto
  order-service-redis:
    container_name: sonnetto-order-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - order-service-cache:/data
    networks:
      - sonnetto
  order-service:
    container_name: sonnetto-order-service
    image: w4t3rcs/sonnetto-order-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_ORDER_SERVICE_URL}/${MYSQL_ORDER_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8085:8085'
    depends_on:
      - eureka-server
      - config-server
      - kafka
      - order-service-mysql
      - order-service-redis
    networks:
      - sonnetto
  notification-service-mysql:
    container_name: sonnetto-notification-service-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_NOTIFICATION_SERVICE_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - notification-service-db:/var/lib/mysql
    networks:
      - sonnetto
  notification-service-redis:
    container_name: sonnetto-notification-service-redis
    image: redis:7.2.5
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - notification-service-cache:/data
    networks:
      - sonnetto
  notification-service:
    container_name: sonnetto-notification-service
    image: w4t3rcs/sonnetto-notification-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: ${MYSQL_NOTIFICATION_SERVICE_URL}/${MYSQL_NOTIFICATION_SERVICE_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - '8086:8086'
    depends_on:
      - eureka-server
      - config-server
      - kafka
      - notification-service-mysql
      - notification-service-redis
    networks:
      - sonnetto
  keycloak-mysql:
    container_name: sonnetto-keycloak-mysql
    image: mysql:9
    environment:
      MYSQL_DATABASE: ${MYSQL_KEYCLOAK_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - keycloak_db:/var/lib/mysql
    networks:
      - sonnetto
  keycloak:
    container_name: sonnetto-keycloak
    image: quay.io/keycloak/keycloak:20.0.2
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8282
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_DB: mysql
      KC_DB_PASSWORD: ${MYSQL_PASSWORD}
      KC_DB_USERNAME: ${MYSQL_USER}
      KC_DB_URL: ${MYSQL_KEYCLOAK_URL}/${MYSQL_KEYCLOAK_DB}

      KC_FEATURES: preview
      KEYCLOAK_ADMIN: ${KEYCLOAK_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - '8282:8080'
    command: start-dev --import-realm
    depends_on:
      - keycloak-mysql
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    networks:
      - sonnetto
  api-gateway:
    container_name: sonnetto-api-gateway
    image: w4t3rcs/sonnetto-api-gateway:latest
    pull_policy: always
    ports:
      - '8080:8080'
    depends_on:
      - eureka-server
      - config-server
      - kafka
      - user-service-mysql
      - ingredient-service-mysql
      - dish-service-mysql
      - price-service-mysql
      - order-service-mysql
      - notification-service-mysql
      - user-service-redis
      - ingredient-service-redis
      - dish-service-redis
      - price-service-redis
      - order-service-redis
      - notification-service-redis
      - user-service
      - ingredient-service
      - dish-service
      - price-service
      - order-service
      - notification-service
#      - keycloak-mysql
#      - keycloak
    networks:
      - sonnetto
volumes:
  user-service-db:
  user-service-cache:
  ingredient-service-db:
  ingredient-service-cache:
  dish-service-db:
  dish-service-cache:
  price-service-db:
  price-service-cache:
  order-service-db:
  order-service-cache:
  notification-service-db:
  notification-service-cache:
  keycloak_db:

networks:
  sonnetto:
    driver: bridge